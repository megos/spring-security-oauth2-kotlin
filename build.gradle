buildscript {
	ext {
		kotlinVersion = '1.3.30'
		springBootVersion = '2.1.4.RELEASE'
		springSecurityVersion = '2.3.5.RELEASE'
		ktlintVersion = '0.31.0'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
	kotlinOptions.jvmTarget = "1.8"
}

repositories {
	mavenCentral()
}

configurations {
	ktlint
}

dependencies {
	compile("org.springframework.boot:spring-boot-starter-security:${springBootVersion}")
	compile("org.springframework.security.oauth:spring-security-oauth2:${springSecurityVersion}")
	compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
	compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
	testCompile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
	testCompile("org.springframework.security:spring-security-test:${springSecurityVersion}")
	ktlint("com.github.shyiko:ktlint:${ktlintVersion}")
}

task ktlint(type: JavaExec, group: "verification") {
	description = "Check Kotlin code style."
	classpath = configurations.ktlint
	main = "com.github.shyiko.ktlint.Main"
	args "src/**/*.kt"
	// to generate report in checkstyle format prepend following args:
	// "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
	// see https://github.com/shyiko/ktlint#usage for more
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
	description = "Fix Kotlin code style deviations."
	classpath = configurations.ktlint
	main = "com.github.shyiko.ktlint.Main"
	args "-F", "src/**/*.kt"
}
